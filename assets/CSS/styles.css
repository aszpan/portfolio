
:root {
  --dark: #b0c4de;
  --neon-green: #51e251;
  --lightcoral: #f08080;
  --darkpurple: #5b0e68;
}

li {
  
  display: inline;
  list-style-type: none;
  font-size: 20px;

}
nav {

  text-align:right;
  padding: 5px;
  background-color: lightslategrey;

}

main {
  width: 90%;
  margin: 32px auto;
}

body {
  font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
  background-color: var(--dark)
}

/* set content highlight color and background */
::selection {
  background-color: var(--neon-green);
  color: #000000;
}

.text-center {
  font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {

margin-bottom: auto;
color: var(--darkpurple);
text-align: left;
font-weight: bolder;
line-height: 1.1;
}
img {
  display: block;
  margin-left: auto;
  margin-right:auto;
  width:100%;
  
  
}

.top {
  display: inline;
  
}

header,
footer, 
p {
  text-align: center;
  margin: 0 auto;
  padding: 12px;
  color: var(--darkpurple);
}


a {
  color: var(--darkpurple);
}


code {
  /* Monospace makes it look more like code */
  font-family: monospace;
}

/* create our main grid with flexbox, use negative margins to offset the padding on the .card-column class */
.row {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  margin-left: -30px;
  margin-right: -30px;
}

.justify-center {
  justify-content: center;
}

/* using a mobile-first approach, set base column width to be 100% and we'll update it using media queries for larger screen sizes */
.card-column {
  flex: 1 0 100%;
  padding: 30px;
  /* when the screen resizes, make it so our columns don't jump in size */
  transition: flex-basis 500ms linear;
  margin-bottom: 30px;
}

/* make each code card a flexbox column to align and justify content within it */
.code-card {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  min-height: 100%;
  padding: 32px;
  color: var(--lightcoral);

  /* outline is like border, but on the outside of the box instead of inside */
  outline: 4px dashed ;
  outline-offset: -12px;
  transition: all 0.5s ease-in-out;
}

.code-card .card-header {
  /* use position and negative margins to move title of card over the card's outline and create an overlap effect */
  position: relative;
  margin: -40px 0 20px 0;
  padding: 8px 16px;
  background-color: var(--dark) ;
  color: var(--darkpurple);
  border: 4px ridge ;
  border-radius: 8px;
  transition: all 0.5s ease-in-out;
  
}

/* set an outer and inner drop shadow on the card to create a glowing effect on hover */
.code-card:hover,
.code-card:hover .card-header {
  box-shadow: inset 0px 0px 8px var(--purple), 0 0 15px var(--purple);
}

/* each card's code block grows to the height of the largest code block on the page, making each card even in height */
.code-card .code-block {
  flex-grow: 1;
}

.code-card pre {
  /* set styles to make it so code wraps in <pre> instead of overflowing */
  white-space: pre-wrap;
  overflow: auto;
  tab-size: 4;
  padding: 18px 16px;
  color: #f7d376;
  border-radius: 8px;
  /* use linear-gradient() function to create a fading background  */
  background-image: linear-gradient(
    lightskyblue 15%,
    darkblue 80%
  );
  display: flex;
  align-items: center;
}

/* on <pre> click, select all contents so the code is highlighted */
.code-card pre:active {
  user-select: all;
}

/* using a mobile-first approach, use `min-width` values going from narrow -> wide for a responsive design */
@media screen and (min-width: 768px) {
  /* on tablets, set columns to only be 50% of the width and not grow */
  .card-column {
    flex: 0 0 50%;
    max-width: 50%;
  }

  /* select the last child to grow to full width if it has space to grow */
  .card-column:last-child {
    flex-grow: 1;
  }
}

/* media query for larger screens */
@media screen and (min-width: 992px) {
  header {
    width: 75%;
  }

  .card-column {
    flex: 0 0 33.333%;
    max-width: 33.333%;
  }
}